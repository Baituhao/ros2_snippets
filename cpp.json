{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

  "ROS2 Basic Node Template": {
    "prefix": "ros2node",
    "body": [
      "#include \"rclcpp/rclcpp.hpp\"",
      "",
      "class ${1:MyNode} : public rclcpp::Node",
      "{",
      "public:",
      "  ${1:MyNode}() : Node(\"${2:my_node}\")",
      "  {",
      "    RCLCPP_INFO(this->get_logger(), \"${2:my_node} created!\");",
      "  }",
      "};",
      "",
      "int main(int argc, char ** argv)",
      "{",
      "  rclcpp::init(argc, argv);",
      "  rclcpp::spin(std::make_shared<${1:MyNode}>());",
      "  rclcpp::shutdown();",
      "  return 0;",
      "}"
    ],
    "description": "ROS 2 basic C++ node with rclcpp"
  }

}